"use strict";
/*
 * This code was generated by
 * ___ _ _ _ _ _    _ ____    ____ ____ _    ____ ____ _  _ ____ ____ ____ ___ __   __
 *  |  | | | | |    | |  | __ |  | |__| | __ | __ |___ |\ | |___ |__/ |__|  | |  | |__/
 *  |  |_|_| | |___ | |__|    |__| |  | |    |__] |___ | \| |___ |  \ |  |  | |__| |  \
 *
 * Twilio - Flex
 * This is the public Twilio REST API.
 *
 * NOTE: This class is auto generated by OpenAPI Generator.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.GoodDataListInstance = exports.GoodDataInstance = exports.GoodDataContextImpl = void 0;
const util_1 = require("util");
const deserialize = require("../../../base/deserialize");
const serialize = require("../../../base/serialize");
class GoodDataContextImpl {
    constructor(_version) {
        this._version = _version;
        this._solution = {};
        this._uri = `/Insights/Session`;
    }
    create(params, callback) {
        if (typeof params === "function") {
            callback = params;
            params = {};
        }
        else {
            params = params || {};
        }
        let data = {};
        const headers = {};
        if (params["token"] !== undefined)
            headers["Token"] = params["token"];
        let operationVersion = this._version, operationPromise = operationVersion.create({
            uri: this._uri,
            method: "post",
            data,
            headers,
        });
        operationPromise = operationPromise.then((payload) => new GoodDataInstance(operationVersion, payload));
        operationPromise = this._version.setPromiseCallback(operationPromise, callback);
        return operationPromise;
    }
    /**
     * Provide a user-friendly representation
     *
     * @returns Object
     */
    toJSON() {
        return this._solution;
    }
    [util_1.inspect.custom](_depth, options) {
        return (0, util_1.inspect)(this.toJSON(), options);
    }
}
exports.GoodDataContextImpl = GoodDataContextImpl;
class GoodDataInstance {
    constructor(_version, payload) {
        this._version = _version;
        this.workspaceId = payload.workspace_id;
        this.sessionExpiry = payload.session_expiry;
        this.sessionId = payload.session_id;
        this.baseUrl = payload.base_url;
        this.url = payload.url;
        this._solution = {};
    }
    get _proxy() {
        this._context = this._context || new GoodDataContextImpl(this._version);
        return this._context;
    }
    create(params, callback) {
        return this._proxy.create(params, callback);
    }
    /**
     * Provide a user-friendly representation
     *
     * @returns Object
     */
    toJSON() {
        return {
            workspaceId: this.workspaceId,
            sessionExpiry: this.sessionExpiry,
            sessionId: this.sessionId,
            baseUrl: this.baseUrl,
            url: this.url,
        };
    }
    [util_1.inspect.custom](_depth, options) {
        return (0, util_1.inspect)(this.toJSON(), options);
    }
}
exports.GoodDataInstance = GoodDataInstance;
class GoodDataListInstanceImpl {
}
function GoodDataListInstance(version) {
    const instance = (() => instance.get());
    instance.get = function get() {
        return new GoodDataContextImpl(version);
    };
    instance._version = version;
    instance._solution = {};
    instance._uri = ``;
    instance.toJSON = function toJSON() {
        return this._solution;
    };
    instance[util_1.inspect.custom] = function inspectImpl(_depth, options) {
        return (0, util_1.inspect)(this.toJSON(), options);
    };
    return instance;
}
exports.GoodDataListInstance = GoodDataListInstance;

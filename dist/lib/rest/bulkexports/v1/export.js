"use strict";
/*
 * This code was generated by
 * ___ _ _ _ _ _    _ ____    ____ ____ _    ____ ____ _  _ ____ ____ ____ ___ __   __
 *  |  | | | | |    | |  | __ |  | |__| | __ | __ |___ |\ | |___ |__/ |__|  | |  | |__/
 *  |  |_|_| | |___ | |__|    |__| |  | |    |__] |___ | \| |___ |  \ |  |  | |__| |  \
 *
 * Twilio - Bulkexports
 * This is the public Twilio REST API.
 *
 * NOTE: This class is auto generated by OpenAPI Generator.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.ExportListInstance = exports.ExportInstance = exports.ExportContextImpl = void 0;
const util_1 = require("util");
const deserialize = require("../../../base/deserialize");
const serialize = require("../../../base/serialize");
const utility_1 = require("../../../base/utility");
const day_1 = require("./export/day");
const exportCustomJob_1 = require("./export/exportCustomJob");
const job_1 = require("./export/job");
class ExportContextImpl {
    constructor(_version, resourceType) {
        this._version = _version;
        if (!(0, utility_1.isValidPathParam)(resourceType)) {
            throw new Error("Parameter 'resourceType' is not valid.");
        }
        this._solution = { resourceType };
        this._uri = `/Exports/${resourceType}`;
    }
    get days() {
        this._days =
            this._days || (0, day_1.DayListInstance)(this._version, this._solution.resourceType);
        return this._days;
    }
    get exportCustomJobs() {
        this._exportCustomJobs =
            this._exportCustomJobs ||
                (0, exportCustomJob_1.ExportCustomJobListInstance)(this._version, this._solution.resourceType);
        return this._exportCustomJobs;
    }
    fetch(callback) {
        let operationVersion = this._version, operationPromise = operationVersion.fetch({
            uri: this._uri,
            method: "get",
        });
        operationPromise = operationPromise.then((payload) => new ExportInstance(operationVersion, payload, this._solution.resourceType));
        operationPromise = this._version.setPromiseCallback(operationPromise, callback);
        return operationPromise;
    }
    /**
     * Provide a user-friendly representation
     *
     * @returns Object
     */
    toJSON() {
        return this._solution;
    }
    [util_1.inspect.custom](_depth, options) {
        return (0, util_1.inspect)(this.toJSON(), options);
    }
}
exports.ExportContextImpl = ExportContextImpl;
class ExportInstance {
    constructor(_version, payload, resourceType) {
        this._version = _version;
        this.resourceType = payload.resource_type;
        this.url = payload.url;
        this.links = payload.links;
        this._solution = { resourceType: resourceType || this.resourceType };
    }
    get _proxy() {
        this._context =
            this._context ||
                new ExportContextImpl(this._version, this._solution.resourceType);
        return this._context;
    }
    /**
     * Fetch a ExportInstance
     *
     * @param { function } [callback] - Callback to handle processed record
     *
     * @returns { Promise } Resolves to processed ExportInstance
     */
    fetch(callback) {
        return this._proxy.fetch(callback);
    }
    /**
     * Access the days.
     */
    days() {
        return this._proxy.days;
    }
    /**
     * Access the exportCustomJobs.
     */
    exportCustomJobs() {
        return this._proxy.exportCustomJobs;
    }
    /**
     * Provide a user-friendly representation
     *
     * @returns Object
     */
    toJSON() {
        return {
            resourceType: this.resourceType,
            url: this.url,
            links: this.links,
        };
    }
    [util_1.inspect.custom](_depth, options) {
        return (0, util_1.inspect)(this.toJSON(), options);
    }
}
exports.ExportInstance = ExportInstance;
class ExportListInstanceImpl {
}
function ExportListInstance(version) {
    const instance = ((resourceType) => instance.get(resourceType));
    instance.get = function get(resourceType) {
        return new ExportContextImpl(version, resourceType);
    };
    instance._version = version;
    instance._solution = {};
    instance._uri = `/Exports`;
    Object.defineProperty(instance, "jobs", {
        get: function jobs() {
            if (!this._jobs) {
                this._jobs = (0, job_1.JobListInstance)(this._version);
            }
            return this._jobs;
        },
    });
    instance.toJSON = function toJSON() {
        return this._solution;
    };
    instance[util_1.inspect.custom] = function inspectImpl(_depth, options) {
        return (0, util_1.inspect)(this.toJSON(), options);
    };
    return instance;
}
exports.ExportListInstance = ExportListInstance;

/**
 * This code was generated by
 * \ / _    _  _|   _  _
 *  | (_)\/(_)(_|\/| |(/_  v1.0.0
 *       /       /
 */

import Page = require('../../../../../base/Page');
import Response = require('../../../../../http/response');
import V1 = require('../../../V1');
import serialize = require('../../../../../base/serialize');
import { SerializableClass } from '../../../../../interfaces';

/**
 * Initialize the WorkersStatisticsList
 *
 * @param version - Version of the resource
 * @param workspaceSid - The ID of the Workflow this worker is associated with
 */
declare function WorkersStatisticsList(version: V1, workspaceSid: string): WorkersStatisticsListInstance;

/**
 * Options to pass to fetch
 *
 * @property endDate - Filter cumulative statistics by a end date.
 * @property friendlyName - The friendly_name
 * @property minutes - Filter cumulative statistics by up to 'x' minutes in the past.
 * @property startDate - Filter cumulative statistics by a start date.
 * @property taskChannel - Filter cumulative statistics by TaskChannel.
 * @property taskQueueName - Filter the real-time and cumulative statistics based on Workers tied to a particular queue
 * @property taskQueueSid - Filter the real-time and cumulative statistics based on Workers tied to a particular queue
 */
interface WorkersStatisticsInstanceFetchOptions {
  endDate?: Date;
  friendlyName?: string;
  minutes?: number;
  startDate?: Date;
  taskChannel?: string;
  taskQueueName?: string;
  taskQueueSid?: string;
}

interface WorkersStatisticsListInstance {
  /**
   * @param sid - sid of instance
   */
  (sid: string): WorkersStatisticsContext;
  /**
   * Constructs a workers_statistics
   */
  get(): WorkersStatisticsContext;
  /**
   * Provide a user-friendly representation
   */
  toJSON(): any;
}

interface WorkersStatisticsPayload extends WorkersStatisticsResource, Page.TwilioResponsePayload {
}

interface WorkersStatisticsResource {
  account_sid: string;
  cumulative: string;
  realtime: string;
  url: string;
  workspace_sid: string;
}

interface WorkersStatisticsSolution {
  workspaceSid?: string;
}


declare class WorkersStatisticsContext {
  /**
   * Initialize the WorkersStatisticsContext
   *
   * @param version - Version of the resource
   * @param workspaceSid - The workspace_sid
   */
  constructor(version: V1, workspaceSid: string);

  /**
   * fetch a WorkersStatisticsInstance
   *
   * @param opts - Options for request
   * @param callback - Callback to handle processed record
   */
  fetch(opts?: WorkersStatisticsInstanceFetchOptions, callback?: (error: Error | null, items: WorkersStatisticsInstance) => any): Promise<WorkersStatisticsInstance>;
  /**
   * Provide a user-friendly representation
   */
  toJSON(): any;
}


declare class WorkersStatisticsInstance extends SerializableClass {
  /**
   * Initialize the WorkersStatisticsContext
   *
   * @param version - Version of the resource
   * @param payload - The instance payload
   * @param workspaceSid - The ID of the Workflow this worker is associated with
   */
  constructor(version: V1, payload: WorkersStatisticsPayload, workspaceSid: string);

  private _proxy: WorkersStatisticsContext;
  accountSid: string;
  cumulative: string;
  /**
   * fetch a WorkersStatisticsInstance
   *
   * @param opts - Options for request
   * @param callback - Callback to handle processed record
   */
  fetch(opts?: WorkersStatisticsInstanceFetchOptions, callback?: (error: Error | null, items: WorkersStatisticsInstance) => any): void;
  realtime: string;
  /**
   * Provide a user-friendly representation
   */
  toJSON(): any;
  url: string;
  workspaceSid: string;
}


declare class WorkersStatisticsPage extends Page<V1, WorkersStatisticsPayload, WorkersStatisticsResource, WorkersStatisticsInstance> {
  /**
   * Initialize the WorkersStatisticsPage
   *
   * @param version - Version of the resource
   * @param response - Response from the API
   * @param solution - Path solution
   */
  constructor(version: V1, response: Response<string>, solution: WorkersStatisticsSolution);

  /**
   * Build an instance of WorkersStatisticsInstance
   *
   * @param payload - Payload response from the API
   */
  getInstance(payload: WorkersStatisticsPayload): WorkersStatisticsInstance;
  /**
   * Provide a user-friendly representation
   */
  toJSON(): any;
}

export { WorkersStatisticsContext, WorkersStatisticsInstance, WorkersStatisticsList, WorkersStatisticsListInstance, WorkersStatisticsPage, WorkersStatisticsPayload, WorkersStatisticsResource, WorkersStatisticsSolution }

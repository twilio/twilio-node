/**
 * This code was generated by
 * \ / _    _  _|   _  _
 *  | (_)\/(_)(_|\/| |(/_  v1.0.0
 *       /       /
 */

import Page = require('../../../../base/Page');
import V2010 = require('../../V2010');
import { SerializableClass } from '../../../../interfaces';

/**
 * @description Initialize the ValidationRequestList
 *
 * @param version - Version of the resource
 * @param accountSid - The unique ID of the Account responsible for this Caller Id.
 */
declare function ValidationRequestList(version: V2010, accountSid: string): ValidationRequestListInstance;

interface ValidationRequestResource {
  account_sid: string;
  call_sid: string;
  friendly_name: string;
  phone_number: string;
  validation_code: number;
}

interface ValidationRequestPayload extends ValidationRequestResource, Page.TwilioResponsePayload {
}

interface ValidationRequestListInstance {
  /* jshint ignore:start */
  /**
   * create a ValidationRequestInstance
   *
   * @function create
   * @memberof Twilio.Api.V2010.AccountContext.ValidationRequestList
   * @instance
   *
   * @param {object} opts - ...
   * @param {string} opts.phoneNumber - The phone number to verify.
   * @param {string} [opts.friendlyName] -
   *          A human readable description for the new caller ID with maximum length 64 characters.
   * @param {number} [opts.callDelay] -
   *          The number of seconds, between 0 and 60, to delay before initiating the verification call.
   * @param {string} [opts.extension] -
   *          Digits to dial after connecting the verification call.
   * @param {string} [opts.statusCallback] -
   *          A URL that Twilio will request when the verification call ends to notify your app if the verification process was successful or not.
   * @param {string} [opts.statusCallbackMethod] -
   *          The HTTP method Twilio should use when requesting the above URL.
   * @param {function} [callback] - Callback to handle processed record
   *
   * @returns {Promise} Resolves to processed ValidationRequestInstance
   */
  /* jshint ignore:end */
  ValidationRequestListInstance.create = function create(opts, callback) {
    if (_.isUndefined(opts)) {
      throw new Error('Required parameter "opts" missing.');
    }
    if (_.isUndefined(opts.phoneNumber)) {
      throw new Error('Required parameter "opts.phoneNumber" missing.');
    }

    var deferred = Q.defer();
    var data = values.of({
      'PhoneNumber': _.get(opts, 'phoneNumber'),
      'FriendlyName': _.get(opts, 'friendlyName'),
      'CallDelay': _.get(opts, 'callDelay'),
      'Extension': _.get(opts, 'extension'),
      'StatusCallback': _.get(opts, 'statusCallback'),
      'StatusCallbackMethod': _.get(opts, 'statusCallbackMethod')
    });

    var promise = this._version.create({uri: this._uri, method: 'POST', data: data});

    promise = promise.then(function(payload) {
      deferred.resolve(new ValidationRequestInstance(this._version, payload));
    }.bind(this));

    promise.catch(function(error) {
      deferred.reject(error);
    });

    if (_.isFunction(callback)) {
      deferred.promise.nodeify(callback);
    }

    return deferred.promise;
  };
}


declare class ValidationRequestPage extends Page {
  /**
   * @constructor Twilio.Api.V2010.AccountContext.ValidationRequestPage
   * @augments Page
   * @description Initialize the ValidationRequestPage
   *
   * @param version - Version of the resource
   * @param response - Response from the API
   * @param solution - Path solution
   */
  constructor(version: Twilio.Api.V2010, response: object, solution: object);

  /**
   * Build an instance of ValidationRequestInstance
   *
   * @function getInstance
   * @memberof Twilio.Api.V2010.AccountContext.ValidationRequestPage
   * @instance
   *
   * @param payload - Payload response from the API
   */
  getInstance(payload: object);
}


declare class ValidationRequestInstance {
  /**
   * @constructor Twilio.Api.V2010.AccountContext.ValidationRequestInstance
   * @description Initialize the ValidationRequestContext
   *
   * @property accountSid - The unique ID of the Account responsible for this Caller Id.
   * @property phoneNumber - The incoming phone number.
   * @property friendlyName - A human readable descriptive text for this resource, up to 64 characters long.
   * @property validationCode - The 6 digit validation code that must be entered via the phone to validate this phone number for Caller ID.
   * @property callSid - The unique id of the Call created for this validation attempt.
   *
   * @param version - Version of the resource
   * @param payload - The instance payload
   * @param accountSid - The unique ID of the Account responsible for this Caller Id.
   */
  constructor(version: Twilio.Api.V2010, payload: object, accountSid: sid);

  /**
   * Produce a plain JSON object version of the ValidationRequestInstance for serialization.
   * Removes any circular references in the object.
   *
   * @function toJSON
   * @memberof Twilio.Api.V2010.AccountContext.ValidationRequestInstance
   * @instance
   */
  toJSON();
}

export { ValidationRequestInstance, ValidationRequestList, ValidationRequestListInstance, ValidationRequestPage, ValidationRequestPayload, ValidationRequestResource }

/*
 * This code was generated by
 * ___ _ _ _ _ _    _ ____    ____ ____ _    ____ ____ _  _ ____ ____ ____ ___ __   __
 *  |  | | | | |    | |  | __ |  | |__| | __ | __ |___ |\ | |___ |__/ |__|  | |  | |__/
 *  |  |_|_| | |___ | |__|    |__| |  | |    |__] |___ | \| |___ |  \ |  |  | |__| |  \
 *
 * Twilio - Api
 * This is the public Twilio REST API.
 *
 * NOTE: This class is auto generated by OpenAPI Generator.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import { inspect, InspectOptions } from "util";
import V2010 from "../../../../../V2010";
const deserialize = require("../../../../../../../base/deserialize");
const serialize = require("../../../../../../../base/serialize");
import { AuthRegistrationsCredentialListMappingListInstance } from "./authTypeRegistrations/authRegistrationsCredentialListMapping";



export interface AuthTypeRegistrationsListInstance {

  credentialListMappings: AuthRegistrationsCredentialListMappingListInstance;

  /**
   * Provide a user-friendly representation
   */
  toJSON(): any;
  [inspect.custom](_depth: any, options: InspectOptions): any;
}

export interface AuthTypeRegistrationsSolution {
  accountSid?: string;
  domainSid?: string;
}

interface AuthTypeRegistrationsListInstanceImpl extends AuthTypeRegistrationsListInstance {}
class AuthTypeRegistrationsListInstanceImpl implements AuthTypeRegistrationsListInstance {
  _version?: V2010;
  _solution?: AuthTypeRegistrationsSolution;
  _uri?: string;

  _credentialListMappings?: AuthRegistrationsCredentialListMappingListInstance;
}

export function AuthTypeRegistrationsListInstance(version: V2010, accountSid: string, domainSid: string): AuthTypeRegistrationsListInstance {
  const instance = {} as AuthTypeRegistrationsListInstanceImpl;

  instance._version = version;
  instance._solution = { accountSid, domainSid };
  instance._uri = `/Accounts/${accountSid}/SIP/Domains/${domainSid}/Auth/Registrations.json`;

  Object.defineProperty(instance, "credentialListMappings", {
    get: function credentialListMappings() {
      if (!this._credentialListMappings) {
        this._credentialListMappings = AuthRegistrationsCredentialListMappingListInstance(this._version, this._solution.accountSid, this._solution.domainSid);
      }
      return this._credentialListMappings;
    }
  });

  instance.toJSON = function toJSON() {
    return this._solution;
  }

  instance[inspect.custom] = function inspectImpl(_depth: any, options: InspectOptions) {
    return inspect(this.toJSON(), options);
  }

  return instance;
}



/*
 * This code was generated by
 * ___ _ _ _ _ _    _ ____    ____ ____ _    ____ ____ _  _ ____ ____ ____ ___ __   __
 *  |  | | | | |    | |  | __ |  | |__| | __ | __ |___ |\ | |___ |__/ |__|  | |  | |__/
 *  |  |_|_| | |___ | |__|    |__| |  | |    |__] |___ | \| |___ |  \ |  |  | |__| |  \
 *
 * Twilio - Api
 * This is the public Twilio REST API.
 *
 * NOTE: This class is auto generated by OpenAPI Generator.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { inspect, InspectOptions } from "util";
import V2010 from "../../V2010";
const deserialize = require("../../../../base/deserialize");
const serialize = require("../../../../base/serialize");
import { isValidPathParam } from "../../../../base/utility";

/**
 * Options to pass to create a NewSigningKeyInstance
 */
export interface NewSigningKeyListInstanceCreateOptions {
  /** A descriptive string that you create to describe the resource. It can be up to 64 characters long. */
  friendlyName?: string;
}

export interface NewSigningKeyListInstance {
  /**
   * Create a NewSigningKeyInstance
   *
   * @param callback - Callback to handle processed record
   *
   * @returns Resolves to processed NewSigningKeyInstance
   */
  create(
    callback?: (error: Error | null, item?: NewSigningKeyInstance) => any
  ): Promise<NewSigningKeyInstance>;
  /**
   * Create a NewSigningKeyInstance
   *
   * @param params - Parameter for request
   * @param callback - Callback to handle processed record
   *
   * @returns Resolves to processed NewSigningKeyInstance
   */
  create(
    params: NewSigningKeyListInstanceCreateOptions,
    callback?: (error: Error | null, item?: NewSigningKeyInstance) => any
  ): Promise<NewSigningKeyInstance>;
  create(params?: any, callback?: any): Promise<NewSigningKeyInstance>;

  /**
   * Provide a user-friendly representation
   */
  toJSON(): any;
  [inspect.custom](_depth: any, options: InspectOptions): any;
}

export interface NewSigningKeySolution {
  accountSid?: string;
}

interface NewSigningKeyListInstanceImpl extends NewSigningKeyListInstance {}
class NewSigningKeyListInstanceImpl implements NewSigningKeyListInstance {
  _version?: V2010;
  _solution?: NewSigningKeySolution;
  _uri?: string;
}

export function NewSigningKeyListInstance(
  version: V2010,
  accountSid: string
): NewSigningKeyListInstance {
  if (!isValidPathParam(accountSid)) {
    throw new Error("Parameter 'accountSid' is not valid.");
  }

  const instance = {} as NewSigningKeyListInstanceImpl;

  instance._version = version;
  instance._solution = { accountSid };
  instance._uri = `/Accounts/${accountSid}/SigningKeys.json`;

  instance.create = function create(
    params?: any,
    callback?: any
  ): Promise<NewSigningKeyInstance> {
    if (typeof params === "function") {
      callback = params;
      params = {};
    } else {
      params = params || {};
    }

    let data: any = {};

    if (params["friendlyName"] !== undefined)
      data["FriendlyName"] = params["friendlyName"];

    const headers: any = {};
    headers["Content-Type"] = "application/x-www-form-urlencoded";

    let operationVersion = version,
      operationPromise = operationVersion.create({
        uri: this._uri,
        method: "post",
        data,
        headers,
      });

    operationPromise = operationPromise.then(
      (payload) =>
        new NewSigningKeyInstance(
          operationVersion,
          payload,
          this._solution.accountSid
        )
    );

    operationPromise = this._version.setPromiseCallback(
      operationPromise,
      callback
    );
    return operationPromise;
  };

  instance.toJSON = function toJSON() {
    return this._solution;
  };

  instance[inspect.custom] = function inspectImpl(
    _depth: any,
    options: InspectOptions
  ) {
    return inspect(this.toJSON(), options);
  };

  return instance;
}

interface NewSigningKeyPayload extends NewSigningKeyResource {}

interface NewSigningKeyResource {
  sid?: string | null;
  friendly_name?: string | null;
  date_created?: Date | null;
  date_updated?: Date | null;
  secret?: string | null;
}

export class NewSigningKeyInstance {
  constructor(
    protected _version: V2010,
    payload: NewSigningKeyResource,
    accountSid: string
  ) {
    this.sid = payload.sid;
    this.friendlyName = payload.friendly_name;
    this.dateCreated = deserialize.rfc2822DateTime(payload.date_created);
    this.dateUpdated = deserialize.rfc2822DateTime(payload.date_updated);
    this.secret = payload.secret;
  }

  /**
   * The unique string that identifies the resource
   */
  sid?: string | null;
  /**
   * The string that you assigned to describe the resource
   */
  friendlyName?: string | null;
  /**
   * The RFC 2822 date and time in GMT that the resource was created
   */
  dateCreated?: Date | null;
  /**
   * The RFC 2822 date and time in GMT that the resource was last updated
   */
  dateUpdated?: Date | null;
  /**
   * The secret your application uses to sign Access Tokens and to authenticate to the REST API.
   */
  secret?: string | null;

  /**
   * Provide a user-friendly representation
   *
   * @returns Object
   */
  toJSON() {
    return {
      sid: this.sid,
      friendlyName: this.friendlyName,
      dateCreated: this.dateCreated,
      dateUpdated: this.dateUpdated,
      secret: this.secret,
    };
  }

  [inspect.custom](_depth: any, options: InspectOptions) {
    return inspect(this.toJSON(), options);
  }
}

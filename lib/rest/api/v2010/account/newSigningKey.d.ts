/**
 * This code was generated by
 * \ / _    _  _|   _  _
 *  | (_)\/(_)(_|\/| |(/_  v1.0.0
 *       /       /
 */

import Page = require('../../../../base/Page');
import V2010 = require('../../V2010');
import { SerializableClass } from '../../../../interfaces';

/**
 * @description Initialize the NewSigningKeyList
 *
 * @param version - Version of the resource
 * @param accountSid - A 34 character string that uniquely identifies this resource.
 */
declare function NewSigningKeyList(version: V2010, accountSid: string): NewSigningKeyListInstance;

interface NewSigningKeyResource {
  date_created: Date;
  date_updated: Date;
  friendly_name: string;
  secret: string;
  sid: string;
}

interface NewSigningKeyPayload extends NewSigningKeyResource, Page.TwilioResponsePayload {
}

interface NewSigningKeyListInstance {
  /* jshint ignore:start */
  /**
   * create a NewSigningKeyInstance
   *
   * @function create
   * @memberof Twilio.Api.V2010.AccountContext.NewSigningKeyList
   * @instance
   *
   * @param {object} [opts] - ...
   * @param {string} [opts.friendlyName] - The friendly_name
   * @param {function} [callback] - Callback to handle processed record
   *
   * @returns {Promise} Resolves to processed NewSigningKeyInstance
   */
  /* jshint ignore:end */
  NewSigningKeyListInstance.create = function create(opts, callback) {
    if (_.isFunction(opts)) {
      callback = opts;
      opts = {};
    }
    opts = opts || {};

    var deferred = Q.defer();
    var data = values.of({'FriendlyName': _.get(opts, 'friendlyName')});

    var promise = this._version.create({uri: this._uri, method: 'POST', data: data});

    promise = promise.then(function(payload) {
      deferred.resolve(new NewSigningKeyInstance(this._version, payload));
    }.bind(this));

    promise.catch(function(error) {
      deferred.reject(error);
    });

    if (_.isFunction(callback)) {
      deferred.promise.nodeify(callback);
    }

    return deferred.promise;
  };
}


declare class NewSigningKeyPage extends Page {
  /**
   * @constructor Twilio.Api.V2010.AccountContext.NewSigningKeyPage
   * @augments Page
   * @description Initialize the NewSigningKeyPage
   *
   * @param version - Version of the resource
   * @param response - Response from the API
   * @param solution - Path solution
   */
  constructor(version: Twilio.Api.V2010, response: object, solution: object);

  /**
   * Build an instance of NewSigningKeyInstance
   *
   * @function getInstance
   * @memberof Twilio.Api.V2010.AccountContext.NewSigningKeyPage
   * @instance
   *
   * @param payload - Payload response from the API
   */
  getInstance(payload: object);
}


declare class NewSigningKeyInstance {
  /**
   * @constructor Twilio.Api.V2010.AccountContext.NewSigningKeyInstance
   * @description Initialize the NewSigningKeyContext
   *
   * @property sid - The sid
   * @property friendlyName - The friendly_name
   * @property dateCreated - The date_created
   * @property dateUpdated - The date_updated
   * @property secret - The secret
   *
   * @param version - Version of the resource
   * @param payload - The instance payload
   * @param accountSid - A 34 character string that uniquely identifies this resource.
   */
  constructor(version: Twilio.Api.V2010, payload: object, accountSid: sid);

  /**
   * Produce a plain JSON object version of the NewSigningKeyInstance for serialization.
   * Removes any circular references in the object.
   *
   * @function toJSON
   * @memberof Twilio.Api.V2010.AccountContext.NewSigningKeyInstance
   * @instance
   */
  toJSON();
}

export { NewSigningKeyInstance, NewSigningKeyList, NewSigningKeyListInstance, NewSigningKeyPage, NewSigningKeyPayload, NewSigningKeyResource }

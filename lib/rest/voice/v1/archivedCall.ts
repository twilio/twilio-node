/*
 * This code was generated by
 * ___ _ _ _ _ _    _ ____    ____ ____ _    ____ ____ _  _ ____ ____ ____ ___ __   __
 *  |  | | | | |    | |  | __ |  | |__| | __ | __ |___ |\ | |___ |__/ |__|  | |  | |__/
 *  |  |_|_| | |___ | |__|    |__| |  | |    |__] |___ | \| |___ |  \ |  |  | |__| |  \
 *
 * Twilio - Voice
 * This is the public Twilio REST API.
 *
 * NOTE: This class is auto generated by OpenAPI Generator.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import { inspect, InspectOptions } from "util";
import V1 from "../V1";
const deserialize = require("../../../base/deserialize");
const serialize = require("../../../base/serialize");



export interface ArchivedCallListInstance {


  /**
   * Remove a ArchivedCallInstance
   *
   * @param { function } [callback] - Callback to handle processed record
   *
   * @returns { Promise } Resolves to processed boolean
   */
  remove(callback?: (error: Error | null, item?: boolean) => any): Promise<boolean>


  /**
   * Provide a user-friendly representation
   */
  toJSON(): any;
  [inspect.custom](_depth: any, options: InspectOptions): any;
}

export interface ArchivedCallSolution {
  date?: Date;
}

interface ArchivedCallListInstanceImpl extends ArchivedCallListInstance {}
class ArchivedCallListInstanceImpl implements ArchivedCallListInstance {
  _version?: V1;
  _solution?: ArchivedCallSolution;
  _uri?: string;

}

export function ArchivedCallListInstance(version: V1, date: Date): ArchivedCallListInstance {
  const instance = {} as ArchivedCallListInstanceImpl;

  instance._version = version;
  instance._solution = { date };
  instance._uri = `/Archives/${date}/Calls`;

  instance.remove = function remove(callback?: any): Promise<boolean> {

    let operationVersion = version,
        operationPromise = operationVersion.remove({ uri: this._uri, method: 'delete' });
    

    operationPromise = this._version.setPromiseCallback(operationPromise,callback);
    return operationPromise;


    }

  instance.toJSON = function toJSON() {
    return this._solution;
  }

  instance[inspect.custom] = function inspectImpl(_depth: any, options: InspectOptions) {
    return inspect(this.toJSON(), options);
  }

  return instance;
}



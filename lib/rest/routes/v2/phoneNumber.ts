/*
 * This code was generated by
 * ___ _ _ _ _ _    _ ____    ____ ____ _    ____ ____ _  _ ____ ____ ____ ___ __   __
 *  |  | | | | |    | |  | __ |  | |__| | __ | __ |___ |\ | |___ |__/ |__|  | |  | |__/
 *  |  |_|_| | |___ | |__|    |__| |  | |    |__] |___ | \| |___ |  \ |  |  | |__| |  \
 *
 * Twilio - Routes
 * This is the public Twilio REST API.
 *
 * NOTE: This class is auto generated by OpenAPI Generator.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import { inspect, InspectOptions } from "util";
import V2 from "../V2";
const deserialize = require("../../../base/deserialize");
const serialize = require("../../../base/serialize");



/**
 * Options to pass to update a PhoneNumberInstance
 *
 * @property { string } [voiceRegion] The Inbound Processing Region used for this phone number for voice
 * @property { string } [friendlyName] A human readable description of this resource, up to 64 characters.
 */
export interface PhoneNumberListInstanceUpdateOptions {
  'voiceRegion'?: string;
  'friendlyName'?: string;
}

export interface PhoneNumberListInstance {


  /**
   * Fetch a PhoneNumberInstance
   *
   * @param { function } [callback] - Callback to handle processed record
   *
   * @returns { Promise } Resolves to processed PhoneNumberInstance
   */
  fetch(callback?: (error: Error | null, item?: PhoneNumberInstance) => any): Promise<PhoneNumberInstance>


  /**
   * Update a PhoneNumberInstance
   *
   * @param { function } [callback] - Callback to handle processed record
   *
   * @returns { Promise } Resolves to processed PhoneNumberInstance
   */
  update(callback?: (error: Error | null, item?: PhoneNumberInstance) => any): Promise<PhoneNumberInstance>;
  /**
   * Update a PhoneNumberInstance
   *
   * @param { PhoneNumberListInstanceUpdateOptions } params - Parameter for request
   * @param { function } [callback] - Callback to handle processed record
   *
   * @returns { Promise } Resolves to processed PhoneNumberInstance
   */
  update(params: PhoneNumberListInstanceUpdateOptions, callback?: (error: Error | null, item?: PhoneNumberInstance) => any): Promise<PhoneNumberInstance>;
  update(params?: any, callback?: any): Promise<PhoneNumberInstance>


  /**
   * Provide a user-friendly representation
   */
  toJSON(): any;
  [inspect.custom](_depth: any, options: InspectOptions): any;
}

export interface PhoneNumberSolution {
}

interface PhoneNumberListInstanceImpl extends PhoneNumberListInstance {}
class PhoneNumberListInstanceImpl implements PhoneNumberListInstance {
  _version?: V2;
  _solution?: PhoneNumberSolution;
  _uri?: string;

}

export function PhoneNumberListInstance(version: V2): PhoneNumberListInstance {
  const instance = {} as PhoneNumberListInstanceImpl;

  instance._version = version;
  instance._solution = {  };
  instance._uri = `/PhoneNumbers`;

  instance.fetch = function fetch(callback?: any): Promise<PhoneNumberInstance> {

    let operationVersion = version,
        operationPromise = operationVersion.fetch({ uri: this._uri, method: 'get' });
    
    operationPromise = operationPromise.then(payload => new PhoneNumberInstance(operationVersion, payload));
    

    operationPromise = this._version.setPromiseCallback(operationPromise,callback);
    return operationPromise;


    }

  instance.update = function update(params?: any, callback?: any): Promise<PhoneNumberInstance> {
    if (typeof params === "function") {
      callback = params;
      params = {};
    } else {
      params = params || {};
    }

    const data: any = {};

    if (params['voiceRegion'] !== undefined) data['VoiceRegion'] = params['voiceRegion'];
    if (params['friendlyName'] !== undefined) data['FriendlyName'] = params['friendlyName'];

    const headers: any = {};
    headers['Content-Type'] = 'application/x-www-form-urlencoded'

    let operationVersion = version,
        operationPromise = operationVersion.update({ uri: this._uri, method: 'post', data, headers });
    
    operationPromise = operationPromise.then(payload => new PhoneNumberInstance(operationVersion, payload));
    

    operationPromise = this._version.setPromiseCallback(operationPromise,callback);
    return operationPromise;


    }

  instance.toJSON = function toJSON() {
    return this._solution;
  }

  instance[inspect.custom] = function inspectImpl(_depth: any, options: InspectOptions) {
    return inspect(this.toJSON(), options);
  }

  return instance;
}

interface PhoneNumberPayload extends PhoneNumberResource{
}

interface PhoneNumberResource {
  phone_number?: string | null;
  url?: string | null;
  sid?: string | null;
  account_sid?: string | null;
  friendly_name?: string | null;
  voice_region?: string | null;
  date_created?: Date | null;
  date_updated?: Date | null;
}

export class PhoneNumberInstance {

  constructor(protected _version: V2, payload: PhoneNumberPayload) {
    this.phoneNumber = payload.phone_number;
    this.url = payload.url;
    this.sid = payload.sid;
    this.accountSid = payload.account_sid;
    this.friendlyName = payload.friendly_name;
    this.voiceRegion = payload.voice_region;
    this.dateCreated = deserialize.iso8601DateTime(payload.date_created);
    this.dateUpdated = deserialize.iso8601DateTime(payload.date_updated);

  }

  /**
   * The phone number
   */
  phoneNumber?: string | null;
  /**
   * The absolute URL of the resource
   */
  url?: string | null;
  /**
   * A string that uniquely identifies the Inbound Processing Region assignments for this phone number.
   */
  sid?: string | null;
  /**
   * Account Sid.
   */
  accountSid?: string | null;
  /**
   * A human readable description of the Inbound Processing Region assignments for this phone number.
   */
  friendlyName?: string | null;
  /**
   * The Inbound Processing Region used for this phone number for voice.
   */
  voiceRegion?: string | null;
  /**
   * The date that this phone number was assigned an Inbound Processing Region.
   */
  dateCreated?: Date | null;
  /**
   * The date that the Inbound Processing Region was updated for this phone number.
   */
  dateUpdated?: Date | null;

  /**
   * Provide a user-friendly representation
   *
   * @returns Object
   */
  toJSON() {
    return {
      phoneNumber: this.phoneNumber, 
      url: this.url, 
      sid: this.sid, 
      accountSid: this.accountSid, 
      friendlyName: this.friendlyName, 
      voiceRegion: this.voiceRegion, 
      dateCreated: this.dateCreated, 
      dateUpdated: this.dateUpdated
    }
  }

  [inspect.custom](_depth: any, options: InspectOptions) {
    return inspect(this.toJSON(), options);
  }
}



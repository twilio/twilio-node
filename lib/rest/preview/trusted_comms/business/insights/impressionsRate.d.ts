/**
 * This code was generated by
 * \ / _    _  _|   _  _
 *  | (_)\/(_)(_|\/| |(/_  v1.0.0
 *       /       /
 */

import Page = require('../../../../../base/Page');
import Response = require('../../../../../http/response');
import TrustedComms = require('../../../TrustedComms');
import { SerializableClass } from '../../../../../interfaces';

type ImpressionsRateIntervals = 'minute'|'hour'|'day'|'week'|'month';

/**
 * Initialize the ImpressionsRateList
 *
 * PLEASE NOTE that this class contains preview products that are subject to
 * change. Use them with caution. If you currently do not have developer preview
 * access, please contact help@twilio.com.
 *
 * @param version - Version of the resource
 * @param businessSid - A string that uniquely identifies this Business.
 */
declare function ImpressionsRateList(version: TrustedComms, businessSid: string): ImpressionsRateListInstance;

/**
 * Options to pass to fetch
 *
 * @property brandSid - Brand Sid.
 * @property brandedChannelSid - Branded Channel Sid.
 * @property country - Country 2-letter ISO 3166 code.
 * @property end - The end date that for this Impressions Rate.
 * @property interval - The Interval of this Impressions Rate.
 * @property phoneNumberSid - Phone Number Sid.
 * @property start - The start date that for this Impressions Rate.
 */
interface ImpressionsRateInstanceFetchOptions {
  brandSid?: string;
  brandedChannelSid?: string;
  country?: string;
  end?: Date;
  interval?: ImpressionsRateIntervals;
  phoneNumberSid?: string;
  start?: Date;
}

interface ImpressionsRateListInstance {
  /**
   * @param sid - sid of instance
   */
  (sid: string): ImpressionsRateContext;
  /**
   * Constructs a impressions_rate
   */
  get(): ImpressionsRateContext;
  /**
   * Provide a user-friendly representation
   */
  toJSON(): any;
}

interface ImpressionsRatePayload extends ImpressionsRateResource, Page.TwilioResponsePayload {
}

interface ImpressionsRateResource {
  account_sid: string;
  business_sid: string;
  end: Date;
  interval: ImpressionsRateIntervals;
  reports: object;
  start: Date;
  url: string;
}

interface ImpressionsRateSolution {
  businessSid?: string;
}


declare class ImpressionsRateContext {
  /**
   * Initialize the ImpressionsRateContext
   *
   * PLEASE NOTE that this class contains preview products that are subject to
   * change. Use them with caution. If you currently do not have developer preview
   * access, please contact help@twilio.com.
   *
   * @param version - Version of the resource
   * @param businessSid - Business Sid.
   */
  constructor(version: TrustedComms, businessSid: string);

  /**
   * fetch a ImpressionsRateInstance
   *
   * @param callback - Callback to handle processed record
   */
  fetch(callback?: (error: Error | null, items: ImpressionsRateInstance) => any): Promise<ImpressionsRateInstance>;
  /**
   * fetch a ImpressionsRateInstance
   *
   * @param opts - Options for request
   * @param callback - Callback to handle processed record
   */
  fetch(opts?: ImpressionsRateInstanceFetchOptions, callback?: (error: Error | null, items: ImpressionsRateInstance) => any): Promise<ImpressionsRateInstance>;
  /**
   * Provide a user-friendly representation
   */
  toJSON(): any;
}


declare class ImpressionsRateInstance extends SerializableClass {
  /**
   * Initialize the ImpressionsRateContext
   *
   * PLEASE NOTE that this class contains preview products that are subject to
   * change. Use them with caution. If you currently do not have developer preview
   * access, please contact help@twilio.com.
   *
   * @param version - Version of the resource
   * @param payload - The instance payload
   * @param businessSid - A string that uniquely identifies this Business.
   */
  constructor(version: TrustedComms, payload: ImpressionsRatePayload, businessSid: string);

  private _proxy: ImpressionsRateContext;
  accountSid: string;
  businessSid: string;
  end: Date;
  /**
   * fetch a ImpressionsRateInstance
   *
   * @param callback - Callback to handle processed record
   */
  fetch(callback?: (error: Error | null, items: ImpressionsRateInstance) => any): Promise<ImpressionsRateInstance>;
  /**
   * fetch a ImpressionsRateInstance
   *
   * @param opts - Options for request
   * @param callback - Callback to handle processed record
   */
  fetch(opts?: ImpressionsRateInstanceFetchOptions, callback?: (error: Error | null, items: ImpressionsRateInstance) => any): Promise<ImpressionsRateInstance>;
  interval: ImpressionsRateIntervals;
  reports: any;
  start: Date;
  /**
   * Provide a user-friendly representation
   */
  toJSON(): any;
  url: string;
}


declare class ImpressionsRatePage extends Page<TrustedComms, ImpressionsRatePayload, ImpressionsRateResource, ImpressionsRateInstance> {
  /**
   * Initialize the ImpressionsRatePage
   *
   * PLEASE NOTE that this class contains preview products that are subject to
   * change. Use them with caution. If you currently do not have developer preview
   * access, please contact help@twilio.com.
   *
   * @param version - Version of the resource
   * @param response - Response from the API
   * @param solution - Path solution
   */
  constructor(version: TrustedComms, response: Response<string>, solution: ImpressionsRateSolution);

  /**
   * Build an instance of ImpressionsRateInstance
   *
   * @param payload - Payload response from the API
   */
  getInstance(payload: ImpressionsRatePayload): ImpressionsRateInstance;
  /**
   * Provide a user-friendly representation
   */
  toJSON(): any;
}

export { ImpressionsRateContext, ImpressionsRateInstance, ImpressionsRateInstanceFetchOptions, ImpressionsRateIntervals, ImpressionsRateList, ImpressionsRateListInstance, ImpressionsRatePage, ImpressionsRatePayload, ImpressionsRateResource, ImpressionsRateSolution }

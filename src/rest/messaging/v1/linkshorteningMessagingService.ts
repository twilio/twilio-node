/*
 * This code was generated by
 * ___ _ _ _ _ _    _ ____    ____ ____ _    ____ ____ _  _ ____ ____ ____ ___ __   __
 *  |  | | | | |    | |  | __ |  | |__| | __ | __ |___ |\ | |___ |__/ |__|  | |  | |__/
 *  |  |_|_| | |___ | |__|    |__| |  | |    |__] |___ | \| |___ |  \ |  |  | |__| |  \
 *
 * Twilio - Messaging
 * This is the public Twilio REST API.
 *
 * NOTE: This class is auto generated by OpenAPI Generator.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { inspect, InspectOptions } from "util";
import V1 from "../V1";
const deserialize = require("../../../base/deserialize");
const serialize = require("../../../base/serialize");
import { isValidPathParam } from "../../../base/utility";

export interface LinkshorteningMessagingServiceContext {
  /**
   * Create a LinkshorteningMessagingServiceInstance
   *
   * @param callback - Callback to handle processed record
   *
   * @returns Resolves to processed LinkshorteningMessagingServiceInstance
   */
  create(
    callback?: (
      error: Error | null,
      item?: LinkshorteningMessagingServiceInstance
    ) => any
  ): Promise<LinkshorteningMessagingServiceInstance>;

  /**
   * Remove a LinkshorteningMessagingServiceInstance
   *
   * @param callback - Callback to handle processed record
   *
   * @returns Resolves to processed boolean
   */
  remove(
    callback?: (error: Error | null, item?: boolean) => any
  ): Promise<boolean>;

  /**
   * Provide a user-friendly representation
   */
  toJSON(): any;
  [inspect.custom](_depth: any, options: InspectOptions): any;
}

export interface LinkshorteningMessagingServiceContextSolution {
  domainSid: string;
  messagingServiceSid: string;
}

export class LinkshorteningMessagingServiceContextImpl
  implements LinkshorteningMessagingServiceContext
{
  protected _solution: LinkshorteningMessagingServiceContextSolution;
  protected _uri: string;

  constructor(
    protected _version: V1,
    domainSid: string,
    messagingServiceSid: string
  ) {
    if (!isValidPathParam(domainSid)) {
      throw new Error("Parameter 'domainSid' is not valid.");
    }

    if (!isValidPathParam(messagingServiceSid)) {
      throw new Error("Parameter 'messagingServiceSid' is not valid.");
    }

    this._solution = { domainSid, messagingServiceSid };
    this._uri = `/LinkShortening/Domains/${domainSid}/MessagingServices/${messagingServiceSid}`;
  }

  create(
    callback?: (
      error: Error | null,
      item?: LinkshorteningMessagingServiceInstance
    ) => any
  ): Promise<LinkshorteningMessagingServiceInstance> {
    const headers: any = {};
    headers["Accept"] = "application/json";

    const instance = this;
    let operationVersion = instance._version,
      operationPromise = operationVersion.create({
        uri: instance._uri,
        method: "post",
        headers,
      });

    operationPromise = operationPromise.then(
      (payload) =>
        new LinkshorteningMessagingServiceInstance(
          operationVersion,
          payload,
          instance._solution.domainSid,
          instance._solution.messagingServiceSid
        )
    );

    operationPromise = instance._version.setPromiseCallback(
      operationPromise,
      callback
    );
    return operationPromise;
  }

  remove(
    callback?: (error: Error | null, item?: boolean) => any
  ): Promise<boolean> {
    const headers: any = {};

    const instance = this;
    let operationVersion = instance._version,
      operationPromise = operationVersion.remove({
        uri: instance._uri,
        method: "delete",
        headers,
      });

    operationPromise = instance._version.setPromiseCallback(
      operationPromise,
      callback
    );
    return operationPromise;
  }

  /**
   * Provide a user-friendly representation
   *
   * @returns Object
   */
  toJSON() {
    return this._solution;
  }

  [inspect.custom](_depth: any, options: InspectOptions) {
    return inspect(this.toJSON(), options);
  }
}

interface LinkshorteningMessagingServicePayload
  extends LinkshorteningMessagingServiceResource {}

interface LinkshorteningMessagingServiceResource {
  domain_sid: string;
  messaging_service_sid: string;
  url: string;
}

export class LinkshorteningMessagingServiceInstance {
  protected _solution: LinkshorteningMessagingServiceContextSolution;
  protected _context?: LinkshorteningMessagingServiceContext;

  constructor(
    protected _version: V1,
    payload: LinkshorteningMessagingServiceResource,
    domainSid?: string,
    messagingServiceSid?: string
  ) {
    this.domainSid = payload.domain_sid;
    this.messagingServiceSid = payload.messaging_service_sid;
    this.url = payload.url;

    this._solution = {
      domainSid: domainSid || this.domainSid,
      messagingServiceSid: messagingServiceSid || this.messagingServiceSid,
    };
  }

  /**
   * The unique string identifies the domain resource
   */
  domainSid: string;
  /**
   * The unique string that identifies the messaging service
   */
  messagingServiceSid: string;
  url: string;

  private get _proxy(): LinkshorteningMessagingServiceContext {
    this._context =
      this._context ||
      new LinkshorteningMessagingServiceContextImpl(
        this._version,
        this._solution.domainSid,
        this._solution.messagingServiceSid
      );
    return this._context;
  }

  /**
   * Create a LinkshorteningMessagingServiceInstance
   *
   * @param callback - Callback to handle processed record
   *
   * @returns Resolves to processed LinkshorteningMessagingServiceInstance
   */
  create(
    callback?: (
      error: Error | null,
      item?: LinkshorteningMessagingServiceInstance
    ) => any
  ): Promise<LinkshorteningMessagingServiceInstance> {
    return this._proxy.create(callback);
  }

  /**
   * Remove a LinkshorteningMessagingServiceInstance
   *
   * @param callback - Callback to handle processed record
   *
   * @returns Resolves to processed boolean
   */
  remove(
    callback?: (error: Error | null, item?: boolean) => any
  ): Promise<boolean> {
    return this._proxy.remove(callback);
  }

  /**
   * Provide a user-friendly representation
   *
   * @returns Object
   */
  toJSON() {
    return {
      domainSid: this.domainSid,
      messagingServiceSid: this.messagingServiceSid,
      url: this.url,
    };
  }

  [inspect.custom](_depth: any, options: InspectOptions) {
    return inspect(this.toJSON(), options);
  }
}

export interface LinkshorteningMessagingServiceSolution {}

export interface LinkshorteningMessagingServiceListInstance {
  _version: V1;
  _solution: LinkshorteningMessagingServiceSolution;
  _uri: string;

  (
    domainSid: string,
    messagingServiceSid: string
  ): LinkshorteningMessagingServiceContext;
  get(
    domainSid: string,
    messagingServiceSid: string
  ): LinkshorteningMessagingServiceContext;

  /**
   * Provide a user-friendly representation
   */
  toJSON(): any;
  [inspect.custom](_depth: any, options: InspectOptions): any;
}

export function LinkshorteningMessagingServiceListInstance(
  version: V1
): LinkshorteningMessagingServiceListInstance {
  const instance = ((domainSid, messagingServiceSid) =>
    instance.get(
      domainSid,
      messagingServiceSid
    )) as LinkshorteningMessagingServiceListInstance;

  instance.get = function get(
    domainSid,
    messagingServiceSid
  ): LinkshorteningMessagingServiceContext {
    return new LinkshorteningMessagingServiceContextImpl(
      version,
      domainSid,
      messagingServiceSid
    );
  };

  instance._version = version;
  instance._solution = {};
  instance._uri = ``;

  instance.toJSON = function toJSON() {
    return instance._solution;
  };

  instance[inspect.custom] = function inspectImpl(
    _depth: any,
    options: InspectOptions
  ) {
    return inspect(instance.toJSON(), options);
  };

  return instance;
}

/*
 * This code was generated by
 * ___ _ _ _ _ _    _ ____    ____ ____ _    ____ ____ _  _ ____ ____ ____ ___ __   __
 *  |  | | | | |    | |  | __ |  | |__| | __ | __ |___ |\ | |___ |__/ |__|  | |  | |__/
 *  |  |_|_| | |___ | |__|    |__| |  | |    |__] |___ | \| |___ |  \ |  |  | |__| |  \
 *
 * Twilio - Flex
 * This is the public Twilio REST API.
 *
 * NOTE: This class is auto generated by OpenAPI Generator.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { inspect, InspectOptions } from "util";
import V1 from "../V1";
const deserialize = require("../../../base/deserialize");
const serialize = require("../../../base/serialize");
import { isValidPathParam } from "../../../base/utility";

/**
 * Options to pass to fetch a InsightsSettingsCommentInstance
 */
export interface InsightsSettingsCommentListInstanceFetchOptions {
  /** The Token HTTP request header */
  token?: string;
}

export interface InsightsSettingsCommentSolution {}

export interface InsightsSettingsCommentListInstance {
  _version: V1;
  _solution: InsightsSettingsCommentSolution;
  _uri: string;

  /**
   * Fetch a InsightsSettingsCommentInstance
   *
   * @param callback - Callback to handle processed record
   *
   * @returns Resolves to processed InsightsSettingsCommentInstance
   */
  fetch(
    callback?: (
      error: Error | null,
      item?: InsightsSettingsCommentInstance
    ) => any
  ): Promise<InsightsSettingsCommentInstance>;
  /**
   * Fetch a InsightsSettingsCommentInstance
   *
   * @param params - Parameter for request
   * @param callback - Callback to handle processed record
   *
   * @returns Resolves to processed InsightsSettingsCommentInstance
   */
  fetch(
    params: InsightsSettingsCommentListInstanceFetchOptions,
    callback?: (
      error: Error | null,
      item?: InsightsSettingsCommentInstance
    ) => any
  ): Promise<InsightsSettingsCommentInstance>;

  /**
   * Provide a user-friendly representation
   */
  toJSON(): any;
  [inspect.custom](_depth: any, options: InspectOptions): any;
}

export function InsightsSettingsCommentListInstance(
  version: V1
): InsightsSettingsCommentListInstance {
  const instance = {} as InsightsSettingsCommentListInstance;

  instance._version = version;
  instance._solution = {};
  instance._uri = `/Insights/QM/Settings/CommentTags`;

  instance.fetch = function fetch(
    params?:
      | InsightsSettingsCommentListInstanceFetchOptions
      | ((error: Error | null, items: InsightsSettingsCommentInstance) => any),
    callback?: (
      error: Error | null,
      items: InsightsSettingsCommentInstance
    ) => any
  ): Promise<InsightsSettingsCommentInstance> {
    if (params instanceof Function) {
      callback = params;
      params = {};
    } else {
      params = params || {};
    }

    let data: any = {};

    const headers: any = {};
    if (params["token"] !== undefined) headers["Token"] = params["token"];

    let operationVersion = version,
      operationPromise = operationVersion.fetch({
        uri: instance._uri,
        method: "get",
        params: data,
        headers,
      });

    operationPromise = operationPromise.then(
      (payload) =>
        new InsightsSettingsCommentInstance(operationVersion, payload)
    );

    operationPromise = instance._version.setPromiseCallback(
      operationPromise,
      callback
    );
    return operationPromise;
  };

  instance.toJSON = function toJSON() {
    return instance._solution;
  };

  instance[inspect.custom] = function inspectImpl(
    _depth: any,
    options: InspectOptions
  ) {
    return inspect(instance.toJSON(), options);
  };

  return instance;
}

interface InsightsSettingsCommentPayload
  extends InsightsSettingsCommentResource {}

interface InsightsSettingsCommentResource {
  account_sid: string;
  comments: any;
  url: string;
}

export class InsightsSettingsCommentInstance {
  constructor(
    protected _version: V1,
    payload: InsightsSettingsCommentResource
  ) {
    this.accountSid = payload.account_sid;
    this.comments = payload.comments;
    this.url = payload.url;
  }

  /**
   * The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Flex Insights resource and owns this resource.
   */
  accountSid: string;
  comments: any;
  url: string;

  /**
   * Provide a user-friendly representation
   *
   * @returns Object
   */
  toJSON() {
    return {
      accountSid: this.accountSid,
      comments: this.comments,
      url: this.url,
    };
  }

  [inspect.custom](_depth: any, options: InspectOptions) {
    return inspect(this.toJSON(), options);
  }
}

/*
 * This code was generated by
 * ___ _ _ _ _ _    _ ____    ____ ____ _    ____ ____ _  _ ____ ____ ____ ___ __   __
 *  |  | | | | |    | |  | __ |  | |__| | __ | __ |___ |\ | |___ |__/ |__|  | |  | |__/
 *  |  |_|_| | |___ | |__|    |__| |  | |    |__] |___ | \| |___ |  \ |  |  | |__| |  \
 *
 * Twilio - Lookups
 * This is the public Twilio REST API.
 *
 * NOTE: This class is auto generated by OpenAPI Generator.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { inspect, InspectOptions } from "util";
import V2 from "../V2";
const deserialize = require("../../../base/deserialize");
const serialize = require("../../../base/serialize");
import { isValidPathParam } from "../../../base/utility";

export class CallForwarding {
  "callForwardingEnabled"?: boolean;
  "errorCode"?: number;
}

export class CallerName {
  "callerName"?: string;
  "callerType"?: string;
  "errorCode"?: number;
}

export class IdentityMatch {
  "firstNameMatch"?: string;
  "lastNameMatch"?: string;
  "addressLineMatch"?: string;
  "cityMatch"?: string;
  "stateMatch"?: string;
  "postalCodeMatch"?: string;
  "countryCodeMatch"?: string;
  "nationalIdMatch"?: string;
  "dateOfBirthMatch"?: string;
  "summaryScore"?: number;
  "errorCode"?: number;
  "errorMessage"?: string;
}

export class IdentityMatchParameters {
  "firstName"?: string;
  "lastName"?: string;
  "addressLine1"?: string;
  "addressLine2"?: string;
  "city"?: string;
  "state"?: string;
  "postalCode"?: string;
  "addressCountryCode"?: string;
  "nationalId"?: string;
  "dateOfBirth"?: string;
}

export class LastSimSwap {
  "lastSimSwapDate"?: Date;
  "swappedPeriod"?: string;
  "swappedInPeriod"?: boolean;
}

export class LineStatus {
  "status"?: string;
  "errorCode"?: number;
}

export class LineTypeIntelligence {
  "type"?: string;
  "carrierName"?: string;
  "mobileCountryCode"?: string;
  "mobileNetworkCode"?: string;
  "errorCode"?: number;
}

export class LookupRequest1 {
  "phoneNumbers"?: Array<LookupRequestWithCorId>;
}

export class LookupRequestWithCorId {
  /**
   * Unique identifier used to match request with response
   */
  "correlationId"?: string;
  "phoneNumber": string;
  "fields"?: Array<string>;
  "countryCode"?: string;
  "identityMatch"?: IdentityMatchParameters;
  "reassignedNumber"?: ReassignedNumberRequest;
  "smsPumpingRisk"?: SmsPumpingRiskParameters;
}

export class LookupResponseWithCorId {
  /**
   * Unique identifier used to match request with response
   */
  "correlationId"?: string;
  /**
   * Twilio error code in case that the request to downstream fails
   */
  "twilioErrorCode"?: number;
  "callingCountryCode"?: string;
  "countryCode"?: string;
  "phoneNumber"?: string;
  "nationalFormat"?: string;
  "valid"?: boolean;
  "validationErrors"?: Array<string>;
  "callerName"?: CallerName;
  "simSwap"?: SimSwap;
  "callForwarding"?: CallForwarding;
  "lineTypeIntelligence"?: LineTypeIntelligence;
  "lineStatus"?: LineStatus;
  "identityMatch"?: IdentityMatch;
  "reassignedNumber"?: ReassignedNumberResponse;
  "smsPumpingRisk"?: SmsPumpingRisk;
}

export class ReassignedNumberRequest {
  "lastVerifiedDate"?: string;
}

export class ReassignedNumberResponse {
  "lastVerifiedDate"?: string;
  "isNumberReassigned"?: string;
  "errorCode"?: string;
}

export class SimSwap {
  "lastSimSwap"?: LastSimSwap;
  "carrierName"?: string;
  "mobileCountryCode"?: string;
  "mobileNetworkCode"?: string;
  "errorCode"?: number;
}

export class SmsPumpingRisk {
  "carrierRiskCategory"?: string;
  "numberBlocked"?: boolean;
  "numberBlockedDate"?: Date;
  "numberBlockedLast3Months"?: boolean;
  "smsPumpingRiskScore"?: number;
  "errorCode"?: number;
}

export class SmsPumpingRiskParameters {
  "partnerSubId"?: string;
}

/**
 * Options to pass to create a QueryInstance
 */
export interface QueryListInstanceCreateOptions {
  /**  */
  lookupRequest1?: LookupRequest1;
}

export interface QuerySolution {}

export interface QueryListInstance {
  _version: V2;
  _solution: QuerySolution;
  _uri: string;

  /**
   * Create a QueryInstance
   *
   * @param callback - Callback to handle processed record
   *
   * @returns Resolves to processed QueryInstance
   */
  create(
    callback?: (error: Error | null, item?: QueryInstance) => any
  ): Promise<QueryInstance>;
  /**
   * Create a QueryInstance
   *
   * @param params - Body for request
   * @param headers - header params for request
   * @param callback - Callback to handle processed record
   *
   * @returns Resolves to processed QueryInstance
   */
  create(
    params: LookupRequest1,
    headers?: any,
    callback?: (error: Error | null, item?: QueryInstance) => any
  ): Promise<QueryInstance>;

  /**
   * Provide a user-friendly representation
   */
  toJSON(): any;
  [inspect.custom](_depth: any, options: InspectOptions): any;
}

export function QueryListInstance(version: V2): QueryListInstance {
  const instance = {} as QueryListInstance;

  instance._version = version;
  instance._solution = {};
  instance._uri = `/batch/query`;

  instance.create = function create(
    params?:
      | LookupRequest1
      | ((error: Error | null, items: QueryInstance) => any),
    headers?: any,
    callback?: (error: Error | null, items: QueryInstance) => any
  ): Promise<QueryInstance> {
    if (params instanceof Function) {
      callback = params;
      params = {};
    } else {
      params = params || {};
    }

    let data: any = {};

    data = params;

    if (headers === null || headers === undefined) {
      headers = {};
    }

    headers["Content-Type"] = "application/json";
    headers["Accept"] = "application/json";

    let operationVersion = version,
      operationPromise = operationVersion.create({
        uri: instance._uri,
        method: "post",
        data,
        headers,
      });

    operationPromise = operationPromise.then(
      (payload) => new QueryInstance(operationVersion, payload)
    );

    operationPromise = instance._version.setPromiseCallback(
      operationPromise,
      callback
    );
    return operationPromise;
  };

  instance.toJSON = function toJSON() {
    return instance._solution;
  };

  instance[inspect.custom] = function inspectImpl(
    _depth: any,
    options: InspectOptions
  ) {
    return inspect(instance.toJSON(), options);
  };

  return instance;
}

interface QueryPayload extends QueryResource {}

interface QueryResource {
  phone_numbers: Array<LookupResponseWithCorId>;
}

export class QueryInstance {
  constructor(protected _version: V2, payload: QueryResource) {
    this.phoneNumbers = payload.phone_numbers;
  }

  phoneNumbers: Array<LookupResponseWithCorId>;

  /**
   * Provide a user-friendly representation
   *
   * @returns Object
   */
  toJSON() {
    return {
      phoneNumbers: this.phoneNumbers,
    };
  }

  [inspect.custom](_depth: any, options: InspectOptions) {
    return inspect(this.toJSON(), options);
  }
}

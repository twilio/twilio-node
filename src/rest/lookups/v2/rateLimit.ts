/*
 * This code was generated by
 * ___ _ _ _ _ _    _ ____    ____ ____ _    ____ ____ _  _ ____ ____ ____ ___ __   __
 *  |  | | | | |    | |  | __ |  | |__| | __ | __ |___ |\ | |___ |__/ |__|  | |  | |__/
 *  |  |_|_| | |___ | |__|    |__| |  | |    |__] |___ | \| |___ |  \ |  |  | |__| |  \
 *
 * Twilio - Lookups
 * This is the public Twilio REST API.
 *
 * NOTE: This class is auto generated by OpenAPI Generator.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { inspect, InspectOptions } from "util";
import V2 from "../V2";
const deserialize = require("../../../base/deserialize");
const serialize = require("../../../base/serialize");
import { isValidPathParam } from "../../../base/utility";

/**
 * Rate limit response schema
 */
export class RateLimitResponse {
  /**
   * Limit of requests for the bucket
   */
  "field"?: string;
  /**
   * Limit of requests for the bucket
   */
  "limit"?: number;
  /**
   * Name of the bucket
   */
  "bucket"?: string;
  /**
   * Owner of the rule
   */
  "owner"?: string;
  /**
   * Time to live of the rule
   */
  "ttl"?: number;
}

/**
 * Options to pass to fetch a RateLimitInstance
 */
export interface RateLimitListInstanceFetchOptions {
  /**  */
  fields?: Array<string>;
}

export interface RateLimitSolution {}

export interface RateLimitListInstance {
  _version: V2;
  _solution: RateLimitSolution;
  _uri: string;

  /**
   * Fetch a RateLimitInstance
   *
   * @param callback - Callback to handle processed record
   *
   * @returns Resolves to processed RateLimitInstance
   */
  fetch(
    callback?: (error: Error | null, item?: RateLimitInstance) => any
  ): Promise<RateLimitInstance>;
  /**
   * Fetch a RateLimitInstance
   *
   * @param params - Parameter for request
   * @param callback - Callback to handle processed record
   *
   * @returns Resolves to processed RateLimitInstance
   */
  fetch(
    params: RateLimitListInstanceFetchOptions,
    callback?: (error: Error | null, item?: RateLimitInstance) => any
  ): Promise<RateLimitInstance>;

  /**
   * Provide a user-friendly representation
   */
  toJSON(): any;
  [inspect.custom](_depth: any, options: InspectOptions): any;
}

export function RateLimitListInstance(version: V2): RateLimitListInstance {
  const instance = {} as RateLimitListInstance;

  instance._version = version;
  instance._solution = {};
  instance._uri = `/RateLimits`;

  instance.fetch = function fetch(
    params?:
      | RateLimitListInstanceFetchOptions
      | ((error: Error | null, items: RateLimitInstance) => any),
    callback?: (error: Error | null, items: RateLimitInstance) => any
  ): Promise<RateLimitInstance> {
    if (params instanceof Function) {
      callback = params;
      params = {};
    } else {
      params = params || {};
    }

    let data: any = {};

    if (params["fields"] !== undefined)
      data["Fields"] = serialize.map(params["fields"], (e: string) => e);

    const headers: any = {};
    headers["Accept"] = "application/json";

    let operationVersion = version,
      operationPromise = operationVersion.fetch({
        uri: instance._uri,
        method: "get",
        params: data,
        headers,
      });

    operationPromise = operationPromise.then(
      (payload) => new RateLimitInstance(operationVersion, payload)
    );

    operationPromise = instance._version.setPromiseCallback(
      operationPromise,
      callback
    );
    return operationPromise;
  };

  instance.toJSON = function toJSON() {
    return instance._solution;
  };

  instance[inspect.custom] = function inspectImpl(
    _depth: any,
    options: InspectOptions
  ) {
    return inspect(instance.toJSON(), options);
  };

  return instance;
}

interface RateLimitPayload extends RateLimitResource {}

interface RateLimitResource {
  rate_limits: Array<RateLimitResponse>;
}

export class RateLimitInstance {
  constructor(protected _version: V2, payload: RateLimitResource) {
    this.rateLimits = payload.rate_limits;
  }

  rateLimits: Array<RateLimitResponse>;

  /**
   * Provide a user-friendly representation
   *
   * @returns Object
   */
  toJSON() {
    return {
      rateLimits: this.rateLimits,
    };
  }

  [inspect.custom](_depth: any, options: InspectOptions) {
    return inspect(this.toJSON(), options);
  }
}

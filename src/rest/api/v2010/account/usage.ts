/*
 * This code was generated by
 * ___ _ _ _ _ _    _ ____    ____ ____ _    ____ ____ _  _ ____ ____ ____ ___ __   __
 *  |  | | | | |    | |  | __ |  | |__| | __ | __ |___ |\ | |___ |__/ |__|  | |  | |__/
 *  |  |_|_| | |___ | |__|    |__| |  | |    |__] |___ | \| |___ |  \ |  |  | |__| |  \
 *
 * Twilio - Api
 * This is the public Twilio REST API.
 *
 * NOTE: This class is auto generated by OpenAPI Generator.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { inspect, InspectOptions } from "util";
import V2010 from "../../V2010";
const deserialize = require("../../../../base/deserialize");
const serialize = require("../../../../base/serialize");
import { isValidPathParam } from "../../../../base/utility";
import { RecordListInstance } from "./usage/record";
import { TriggerListInstance } from "./usage/trigger";

export interface UsageSolution {
  accountSid: string;
}

export interface UsageListInstance {
  _version: V2010;
  _solution: UsageSolution;
  _uri: string;

  _records?: RecordListInstance;
  records: RecordListInstance;
  _triggers?: TriggerListInstance;
  triggers: TriggerListInstance;

  /**
   * Provide a user-friendly representation
   */
  toJSON(): any;
  [inspect.custom](_depth: any, options: InspectOptions): any;
}

export function UsageListInstance(
  version: V2010,
  accountSid: string
): UsageListInstance {
  if (!isValidPathParam(accountSid)) {
    throw new Error("Parameter 'accountSid' is not valid.");
  }

  const instance = {} as UsageListInstance;

  instance._version = version;
  instance._solution = { accountSid };
  instance._uri = `/Accounts/${accountSid}/Usage.json`;

  Object.defineProperty(instance, "records", {
    get: function records() {
      if (!instance._records) {
        instance._records = RecordListInstance(
          instance._version,
          instance._solution.accountSid
        );
      }
      return instance._records;
    },
  });

  Object.defineProperty(instance, "triggers", {
    get: function triggers() {
      if (!instance._triggers) {
        instance._triggers = TriggerListInstance(
          instance._version,
          instance._solution.accountSid
        );
      }
      return instance._triggers;
    },
  });

  instance.toJSON = function toJSON() {
    return instance._solution;
  };

  instance[inspect.custom] = function inspectImpl(
    _depth: any,
    options: InspectOptions
  ) {
    return inspect(instance.toJSON(), options);
  };

  return instance;
}

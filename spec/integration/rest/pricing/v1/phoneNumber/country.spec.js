'use strict';

/* jshint ignore:start */
/**
 * This code was generated by
 * \ / _    _  _|   _  _
 *  | (_)\/(_)(_|\/| |(/_  v1.0.0
 *       /       /
 */
/* jshint ignore:end */

var Holodeck = require('../../../../holodeck');  /* jshint ignore:line */
var Request = require(
    '../../../../../../lib/http/request');  /* jshint ignore:line */
var Response = require(
    '../../../../../../lib/http/response');  /* jshint ignore:line */
var RestException = require(
    '../../../../../../lib/base/RestException');  /* jshint ignore:line */
var Twilio = require('../../../../../../lib');  /* jshint ignore:line */


var client;
var holodeck;

describe('Country', function() {
  beforeEach(function() {
    holodeck = new Holodeck();
    client = new Twilio('ACXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX', 'AUTHTOKEN', {
      httpClient: holodeck
    });
  });
  it('should treat the first each arg as a callback',
    function(done) {
      var body = JSON.stringify({
          'countries': [
              {
                  'country': 'Austria',
                  'iso_country': 'AT',
                  'url': 'https://pricing.twilio.com/v1/PhoneNumbers/Countries/AT'
              }
          ],
          'meta': {
              'page': 0,
              'page_size': 50,
              'first_page_url': 'https://pricing.twilio.com/v1/PhoneNumbers/Countries?PageSize=50&Page=0',
              'previous_page_url': null,
              'url': 'https://pricing.twilio.com/v1/PhoneNumbers/Countries?PageSize=50&Page=0',
              'next_page_url': null,
              'key': 'countries'
          }
      });
      holodeck.mock(new Response(200, body));
      client.pricing.v1.phoneNumbers
                       .countries.each(() => done());
    }
  );
  it('should treat the second arg as a callback',
    function(done) {
      var body = JSON.stringify({
          'countries': [
              {
                  'country': 'Austria',
                  'iso_country': 'AT',
                  'url': 'https://pricing.twilio.com/v1/PhoneNumbers/Countries/AT'
              }
          ],
          'meta': {
              'page': 0,
              'page_size': 50,
              'first_page_url': 'https://pricing.twilio.com/v1/PhoneNumbers/Countries?PageSize=50&Page=0',
              'previous_page_url': null,
              'url': 'https://pricing.twilio.com/v1/PhoneNumbers/Countries?PageSize=50&Page=0',
              'next_page_url': null,
              'key': 'countries'
          }
      });
      holodeck.mock(new Response(200, body));
      client.pricing.v1.phoneNumbers
                       .countries.each({pageSize: 20}, () => done());
      holodeck.assertHasRequest(new Request({
          method: 'GET',
          url: 'https://pricing.twilio.com/v1/PhoneNumbers/Countries',
          params: {PageSize: 20},
      }));
    }
  );
  it('should find the callback in the opts object',
    function(done) {
      var body = JSON.stringify({
          'countries': [
              {
                  'country': 'Austria',
                  'iso_country': 'AT',
                  'url': 'https://pricing.twilio.com/v1/PhoneNumbers/Countries/AT'
              }
          ],
          'meta': {
              'page': 0,
              'page_size': 50,
              'first_page_url': 'https://pricing.twilio.com/v1/PhoneNumbers/Countries?PageSize=50&Page=0',
              'previous_page_url': null,
              'url': 'https://pricing.twilio.com/v1/PhoneNumbers/Countries?PageSize=50&Page=0',
              'next_page_url': null,
              'key': 'countries'
          }
      });
      holodeck.mock(new Response(200, body));
      client.pricing.v1.phoneNumbers
                       .countries.each({callback: () => done()}, () => fail('wrong callback!'));
    }
  );
  it('should generate valid list request',
    function(done) {
      holodeck.mock(new Response(500, '{}'));

      var promise = client.pricing.v1.phoneNumbers
                                     .countries.list();
      promise.then(function() {
        throw new Error('failed');
      }, function(error) {
        expect(error.constructor).toBe(RestException.prototype.constructor);
        done();
      }).done();

      var url = 'https://pricing.twilio.com/v1/PhoneNumbers/Countries';

      holodeck.assertHasRequest(new Request({
        method: 'GET',
        url: url
      }));
    }
  );
  it('should generate valid read_full response',
    function(done) {
      var body = JSON.stringify({
          'countries': [
              {
                  'country': 'Austria',
                  'iso_country': 'AT',
                  'url': 'https://pricing.twilio.com/v1/PhoneNumbers/Countries/AT'
              }
          ],
          'meta': {
              'page': 0,
              'page_size': 50,
              'first_page_url': 'https://pricing.twilio.com/v1/PhoneNumbers/Countries?PageSize=50&Page=0',
              'previous_page_url': null,
              'url': 'https://pricing.twilio.com/v1/PhoneNumbers/Countries?PageSize=50&Page=0',
              'next_page_url': null,
              'key': 'countries'
          }
      });

      holodeck.mock(new Response(200, body));

      var promise = client.pricing.v1.phoneNumbers
                                     .countries.list();
      promise.then(function(response) {
        expect(response).toBeDefined();
        done();
      }, function() {
        throw new Error('failed');
      }).done();
    }
  );
  it('should generate valid read_empty response',
    function(done) {
      var body = JSON.stringify({
          'countries': [],
          'meta': {
              'first_page_url': 'https://pricing.twilio.com/v1/PhoneNumbers/Countries?PageSize=50&Page=0',
              'key': 'countries',
              'next_page_url': null,
              'page': 0,
              'page_size': 50,
              'previous_page_url': null,
              'url': 'https://pricing.twilio.com/v1/PhoneNumbers/Countries?PageSize=50&Page=0'
          }
      });

      holodeck.mock(new Response(200, body));

      var promise = client.pricing.v1.phoneNumbers
                                     .countries.list();
      promise.then(function(response) {
        expect(response).toBeDefined();
        done();
      }, function() {
        throw new Error('failed');
      }).done();
    }
  );
  it('should generate valid fetch request',
    function(done) {
      holodeck.mock(new Response(500, '{}'));

      var promise = client.pricing.v1.phoneNumbers
                                     .countries('US').fetch();
      promise.then(function() {
        throw new Error('failed');
      }, function(error) {
        expect(error.constructor).toBe(RestException.prototype.constructor);
        done();
      }).done();

      var isoCountry = 'US';
      var url = `https://pricing.twilio.com/v1/PhoneNumbers/Countries/${isoCountry}`;

      holodeck.assertHasRequest(new Request({
        method: 'GET',
        url: url
      }));
    }
  );
  it('should generate valid fetch response',
    function(done) {
      var body = JSON.stringify({
          'country': 'United States',
          'iso_country': 'US',
          'phone_number_prices': [
              {
                  'number_type': 'local',
                  'base_price': '1.00',
                  'current_price': '1.00'
              },
              {
                  'number_type': 'toll free',
                  'base_price': '2.00',
                  'current_price': '2.00'
              }
          ],
          'price_unit': 'USD',
          'url': 'https://pricing.twilio.com/v1/PhoneNumbers/Countries/US'
      });

      holodeck.mock(new Response(200, body));

      var promise = client.pricing.v1.phoneNumbers
                                     .countries('US').fetch();
      promise.then(function(response) {
        expect(response).toBeDefined();
        done();
      }, function() {
        throw new Error('failed');
      }).done();
    }
  );
});

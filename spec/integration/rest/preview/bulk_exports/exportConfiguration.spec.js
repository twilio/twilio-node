'use strict';

/* jshint ignore:start */
/**
 * This code was generated by
 * \ / _    _  _|   _  _
 *  | (_)\/(_)(_|\/| |(/_  v1.0.0
 *       /       /
 */
/* jshint ignore:end */

var Holodeck = require('../../../holodeck');  /* jshint ignore:line */
var Request = require(
    '../../../../../lib/http/request');  /* jshint ignore:line */
var Response = require(
    '../../../../../lib/http/response');  /* jshint ignore:line */
var RestException = require(
    '../../../../../lib/base/RestException');  /* jshint ignore:line */
var Twilio = require('../../../../../lib');  /* jshint ignore:line */


var client;
var holodeck;

describe('ExportConfiguration', function() {
  beforeEach(function() {
    holodeck = new Holodeck();
    client = new Twilio('ACXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX', 'AUTHTOKEN', {
      httpClient: holodeck
    });
  });
  it('should generate valid fetch request',
    function(done) {
      holodeck.mock(new Response(500, '{}'));

      var promise = client.preview.bulk_exports.exportConfiguration('resource_type').fetch();
      promise.then(function() {
        throw new Error('failed');
      }, function(error) {
        expect(error.constructor).toBe(RestException.prototype.constructor);
        done();
      }).done();

      var resourceType = 'resource_type';
      var url = `https://preview.twilio.com/BulkExports/Exports/${resourceType}/Configuration`;

      holodeck.assertHasRequest(new Request({
        method: 'GET',
        url: url
      }));
    }
  );
  it('should generate valid fetch response',
    function(done) {
      var body = JSON.stringify({
          'url': 'https://preview.twilio.com/BulkExports/Exports/Calls/Configuration',
          'enabled': true,
          'webhook_url': '',
          'webhook_method': '',
          'resource_type': 'Calls'
      });

      holodeck.mock(new Response(200, body));

      var promise = client.preview.bulk_exports.exportConfiguration('resource_type').fetch();
      promise.then(function(response) {
        expect(response).toBeDefined();
        done();
      }, function() {
        throw new Error('failed');
      }).done();
    }
  );
  it('should generate valid update request',
    function(done) {
      holodeck.mock(new Response(500, '{}'));

      var promise = client.preview.bulk_exports.exportConfiguration('resource_type').update();
      promise.then(function() {
        throw new Error('failed');
      }, function(error) {
        expect(error.constructor).toBe(RestException.prototype.constructor);
        done();
      }).done();

      var resourceType = 'resource_type';
      var url = `https://preview.twilio.com/BulkExports/Exports/${resourceType}/Configuration`;

      holodeck.assertHasRequest(new Request({
        method: 'POST',
        url: url
      }));
    }
  );
  it('should generate valid update response',
    function(done) {
      var body = JSON.stringify({
          'url': 'https://preview.twilio.com/BulkExports/Exports/Calls/Configuration',
          'enabled': true,
          'webhook_url': '',
          'resource_type': 'Calls',
          'webhook_method': ''
      });

      holodeck.mock(new Response(200, body));

      var promise = client.preview.bulk_exports.exportConfiguration('resource_type').update();
      promise.then(function(response) {
        expect(response).toBeDefined();
        done();
      }, function() {
        throw new Error('failed');
      }).done();
    }
  );
});

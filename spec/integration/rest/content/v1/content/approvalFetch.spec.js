'use strict';

/* jshint ignore:start */
/**
 * This code was generated by
 * \ / _    _  _|   _  _
 *  | (_)\/(_)(_|\/| |(/_  v1.0.0
 *       /       /
 */
/* jshint ignore:end */

var Holodeck = require('../../../../holodeck');  /* jshint ignore:line */
var Request = require(
    '../../../../../../lib/http/request');  /* jshint ignore:line */
var Response = require(
    '../../../../../../lib/http/response');  /* jshint ignore:line */
var RestException = require(
    '../../../../../../lib/base/RestException');  /* jshint ignore:line */
var Twilio = require('../../../../../../lib');  /* jshint ignore:line */


var client;
var holodeck;

describe('ApprovalFetch', function() {
  beforeEach(function() {
    holodeck = new Holodeck();
    client = new Twilio('ACXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX', 'AUTHTOKEN', {
      httpClient: holodeck
    });
  });
  it('should generate valid fetch request',
    function(done) {
      holodeck.mock(new Response(500, {}));

      var promise = client.content.v1.contents('HXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX')
                                     .approvalFetch().fetch();
      promise.then(function() {
        throw new Error('failed');
      }, function(error) {
        expect(error.constructor).toBe(RestException.prototype.constructor);
        done();
      }).done();

      var sid = 'HXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX';
      var url = `https://content.twilio.com/v1/Content/${sid}/ApprovalRequests`;

      holodeck.assertHasRequest(new Request({
        method: 'GET',
        url: url
      }));
    }
  );
  it('should generate valid get_approval response',
    function(done) {
      var body = {
          'sid': 'HXaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa',
          'account_sid': 'ACaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa',
          'whatsapp': {
              'type': 'whatsapp',
              'name': 'tree_fiddy',
              'category': 'ACCOUNT_UPDATE',
              'content_type': 'twilio/location',
              'status': 'unsubmitted',
              'rejection_reason': ''
          },
          'url': 'https://content.twilio.com/v1/Content/HXaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/ApprovalRequests'
      };

      holodeck.mock(new Response(200, body));

      var promise = client.content.v1.contents('HXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX')
                                     .approvalFetch().fetch();
      promise.then(function(response) {
        expect(response).toBeDefined();
        done();
      }, function() {
        throw new Error('failed');
      }).done();
    }
  );
});

'use strict';

/* jshint ignore:start */
/**
 * This code was generated by
 * \ / _    _  _|   _  _
 *  | (_)\/(_)(_|\/| |(/_  v1.0.0
 *       /       /
 */
/* jshint ignore:end */

var Holodeck = require('../../../../../holodeck');  /* jshint ignore:line */
var Request = require(
    '../../../../../../../lib/http/request');  /* jshint ignore:line */
var Response = require(
    '../../../../../../../lib/http/response');  /* jshint ignore:line */
var RestException = require(
    '../../../../../../../lib/base/RestException');  /* jshint ignore:line */
var Twilio = require('../../../../../../../lib');  /* jshint ignore:line */
var serialize = require(
    '../../../../../../../lib/base/serialize');  /* jshint ignore:line */


var client;
var holodeck;

describe('InteractionChannelParticipant', function() {
  beforeEach(function() {
    holodeck = new Holodeck();
    client = new Twilio('ACXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX', 'AUTHTOKEN', {
      httpClient: holodeck
    });
  });
  it('should generate valid create request',
    function(done) {
      holodeck.mock(new Response(500, {}));

      var opts = {'type': 'supervisor', 'mediaProperties': {}};
      var promise = client.flexApi.v1.interaction('KDXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX')
                                     .channels('UOXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX')
                                     .participants.create(opts);
      promise.then(function() {
        throw new Error('failed');
      }, function(error) {
        expect(error.constructor).toBe(RestException.prototype.constructor);
        done();
      }).done();

      var interactionSid = 'KDXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX';
      var channelSid = 'UOXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX';
      var url = `https://flex-api.twilio.com/v1/Interactions/${interactionSid}/Channels/${channelSid}/Participants`;

      var values = {'Type': 'supervisor', 'MediaProperties': serialize.object({}), };
      holodeck.assertHasRequest(new Request({
          method: 'POST',
          url: url,
          data: values
      }));
    }
  );
  it('should generate valid create response',
    function(done) {
      var body = {
          'sid': 'UTaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1',
          'channel_sid': 'UOaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1',
          'interaction_sid': 'KDaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa',
          'type': 'customer',
          'url': 'https://flex-api.twilio.com/v1/Interactions/KDaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/Channels/UOaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1/Participants/UTaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1'
      };

      holodeck.mock(new Response(201, body));

      var opts = {'type': 'supervisor', 'mediaProperties': {}};
      var promise = client.flexApi.v1.interaction('KDXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX')
                                     .channels('UOXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX')
                                     .participants.create(opts);
      promise.then(function(response) {
        expect(response).toBeDefined();
        done();
      }, function() {
        throw new Error('failed');
      }).done();
    }
  );
  it('should treat the first each arg as a callback',
    function(done) {
      var body = {
          'participants': [
              {
                  'sid': 'UTaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1',
                  'channel_sid': 'UOaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1',
                  'interaction_sid': 'KDaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa',
                  'type': 'customer',
                  'url': 'https://flex-api.twilio.com/v1/Interactions/KDaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/Channels/UOaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1/Participants/UTaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1'
              },
              {
                  'sid': 'UTaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2',
                  'channel_sid': 'UOaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1',
                  'interaction_sid': 'KDaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa',
                  'type': 'agent',
                  'url': 'https://flex-api.twilio.com/v1/Interactions/KDaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/Channels/UOaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1/Participants/UTaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2'
              }
          ],
          'meta': {
              'page': 0,
              'page_size': 50,
              'first_page_url': 'https://flex-api.twilio.com/v1/Interactions/KDaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/Channels/UOaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1/Participants?PageSize=50&Page=0',
              'previous_page_url': null,
              'url': 'https://flex-api.twilio.com/v1/Interactions/KDaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/Channels/UOaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1/Participants?PageSize=50&Page=0',
              'next_page_url': null,
              'key': 'participants'
          }
      };
      holodeck.mock(new Response(200, body));
      client.flexApi.v1.interaction('KDXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX')
                       .channels('UOXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX')
                       .participants.each(() => done());
    }
  );
  it('should treat the second arg as a callback',
    function(done) {
      var body = {
          'participants': [
              {
                  'sid': 'UTaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1',
                  'channel_sid': 'UOaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1',
                  'interaction_sid': 'KDaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa',
                  'type': 'customer',
                  'url': 'https://flex-api.twilio.com/v1/Interactions/KDaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/Channels/UOaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1/Participants/UTaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1'
              },
              {
                  'sid': 'UTaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2',
                  'channel_sid': 'UOaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1',
                  'interaction_sid': 'KDaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa',
                  'type': 'agent',
                  'url': 'https://flex-api.twilio.com/v1/Interactions/KDaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/Channels/UOaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1/Participants/UTaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2'
              }
          ],
          'meta': {
              'page': 0,
              'page_size': 50,
              'first_page_url': 'https://flex-api.twilio.com/v1/Interactions/KDaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/Channels/UOaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1/Participants?PageSize=50&Page=0',
              'previous_page_url': null,
              'url': 'https://flex-api.twilio.com/v1/Interactions/KDaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/Channels/UOaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1/Participants?PageSize=50&Page=0',
              'next_page_url': null,
              'key': 'participants'
          }
      };
      holodeck.mock(new Response(200, body));
      client.flexApi.v1.interaction('KDXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX')
                       .channels('UOXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX')
                       .participants.each({pageSize: 20}, () => done());
      holodeck.assertHasRequest(new Request({
          method: 'GET',
          url: 'https://flex-api.twilio.com/v1/Interactions/${interactionSid}/Channels/${channelSid}/Participants',
          params: {PageSize: 20},
      }));
    }
  );
  it('should find the callback in the opts object',
    function(done) {
      var body = {
          'participants': [
              {
                  'sid': 'UTaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1',
                  'channel_sid': 'UOaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1',
                  'interaction_sid': 'KDaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa',
                  'type': 'customer',
                  'url': 'https://flex-api.twilio.com/v1/Interactions/KDaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/Channels/UOaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1/Participants/UTaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1'
              },
              {
                  'sid': 'UTaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2',
                  'channel_sid': 'UOaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1',
                  'interaction_sid': 'KDaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa',
                  'type': 'agent',
                  'url': 'https://flex-api.twilio.com/v1/Interactions/KDaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/Channels/UOaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1/Participants/UTaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2'
              }
          ],
          'meta': {
              'page': 0,
              'page_size': 50,
              'first_page_url': 'https://flex-api.twilio.com/v1/Interactions/KDaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/Channels/UOaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1/Participants?PageSize=50&Page=0',
              'previous_page_url': null,
              'url': 'https://flex-api.twilio.com/v1/Interactions/KDaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/Channels/UOaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1/Participants?PageSize=50&Page=0',
              'next_page_url': null,
              'key': 'participants'
          }
      };
      holodeck.mock(new Response(200, body));
      client.flexApi.v1.interaction('KDXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX')
                       .channels('UOXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX')
                       .participants.each({callback: () => done()}, () => fail('wrong callback!'));
    }
  );
  it('should generate valid list request',
    function(done) {
      holodeck.mock(new Response(500, {}));

      var promise = client.flexApi.v1.interaction('KDXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX')
                                     .channels('UOXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX')
                                     .participants.list();
      promise.then(function() {
        throw new Error('failed');
      }, function(error) {
        expect(error.constructor).toBe(RestException.prototype.constructor);
        done();
      }).done();

      var interactionSid = 'KDXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX';
      var channelSid = 'UOXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX';
      var url = `https://flex-api.twilio.com/v1/Interactions/${interactionSid}/Channels/${channelSid}/Participants`;

      holodeck.assertHasRequest(new Request({
        method: 'GET',
        url: url
      }));
    }
  );
  it('should generate valid read response',
    function(done) {
      var body = {
          'participants': [
              {
                  'sid': 'UTaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1',
                  'channel_sid': 'UOaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1',
                  'interaction_sid': 'KDaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa',
                  'type': 'customer',
                  'url': 'https://flex-api.twilio.com/v1/Interactions/KDaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/Channels/UOaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1/Participants/UTaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1'
              },
              {
                  'sid': 'UTaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2',
                  'channel_sid': 'UOaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1',
                  'interaction_sid': 'KDaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa',
                  'type': 'agent',
                  'url': 'https://flex-api.twilio.com/v1/Interactions/KDaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/Channels/UOaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1/Participants/UTaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2'
              }
          ],
          'meta': {
              'page': 0,
              'page_size': 50,
              'first_page_url': 'https://flex-api.twilio.com/v1/Interactions/KDaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/Channels/UOaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1/Participants?PageSize=50&Page=0',
              'previous_page_url': null,
              'url': 'https://flex-api.twilio.com/v1/Interactions/KDaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/Channels/UOaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1/Participants?PageSize=50&Page=0',
              'next_page_url': null,
              'key': 'participants'
          }
      };

      holodeck.mock(new Response(200, body));

      var promise = client.flexApi.v1.interaction('KDXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX')
                                     .channels('UOXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX')
                                     .participants.list();
      promise.then(function(response) {
        expect(response).toBeDefined();
        done();
      }, function() {
        throw new Error('failed');
      }).done();
    }
  );
  it('should generate valid update request',
    function(done) {
      holodeck.mock(new Response(500, {}));

      var opts = {'status': 'closed'};
      var promise = client.flexApi.v1.interaction('KDXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX')
                                     .channels('UOXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX')
                                     .participants('UOXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX').update(opts);
      promise.then(function() {
        throw new Error('failed');
      }, function(error) {
        expect(error.constructor).toBe(RestException.prototype.constructor);
        done();
      }).done();

      var interactionSid = 'KDXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX';
      var channelSid = 'UOXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX';
      var sid = 'UOXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX';
      var url = `https://flex-api.twilio.com/v1/Interactions/${interactionSid}/Channels/${channelSid}/Participants/${sid}`;

      var values = {'Status': 'closed', };
      holodeck.assertHasRequest(new Request({
          method: 'POST',
          url: url,
          data: values
      }));
    }
  );
  it('should generate valid update response',
    function(done) {
      var body = {
          'sid': 'UTaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1',
          'channel_sid': 'UOaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1',
          'interaction_sid': 'KDaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa',
          'type': 'agent',
          'url': 'https://flex-api.twilio.com/v1/Interactions/KDaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/Channels/UOaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1/Participants/UTaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1'
      };

      holodeck.mock(new Response(200, body));

      var opts = {'status': 'closed'};
      var promise = client.flexApi.v1.interaction('KDXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX')
                                     .channels('UOXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX')
                                     .participants('UOXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX').update(opts);
      promise.then(function(response) {
        expect(response).toBeDefined();
        done();
      }, function() {
        throw new Error('failed');
      }).done();
    }
  );
  it('should generate valid update_status_closed response',
    function(done) {
      var body = {
          'sid': 'UTaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1',
          'channel_sid': 'UOaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1',
          'interaction_sid': 'KDaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa',
          'type': 'agent',
          'url': 'https://flex-api.twilio.com/v1/Interactions/KDaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/Channels/UOaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1/Participants/UTaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1'
      };

      holodeck.mock(new Response(200, body));

      var opts = {'status': 'closed'};
      var promise = client.flexApi.v1.interaction('KDXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX')
                                     .channels('UOXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX')
                                     .participants('UOXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX').update(opts);
      promise.then(function(response) {
        expect(response).toBeDefined();
        done();
      }, function() {
        throw new Error('failed');
      }).done();
    }
  );
});

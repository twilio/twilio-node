'use strict';

/* jshint ignore:start */
/**
 * This code was generated by
 * \ / _    _  _|   _  _
 *  | (_)\/(_)(_|\/| |(/_  v1.0.0
 *       /       /
 */
/* jshint ignore:end */

var Holodeck = require('../../../../holodeck');  /* jshint ignore:line */
var Request = require(
    '../../../../../../lib/http/request');  /* jshint ignore:line */
var Response = require(
    '../../../../../../lib/http/response');  /* jshint ignore:line */
var RestException = require(
    '../../../../../../lib/base/RestException');  /* jshint ignore:line */
var Twilio = require('../../../../../../lib');  /* jshint ignore:line */


var client;
var holodeck;

describe('CallSummary', function() {
  beforeEach(function() {
    holodeck = new Holodeck();
    client = new Twilio('ACXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX', 'AUTHTOKEN', {
      httpClient: holodeck
    });
  });
  it('should generate valid fetch request',
    function(done) {
      holodeck.mock(new Response(500, {}));

      var promise = client.insights.v1.calls('CAXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX')
                                      .summary().fetch();
      promise.then(function() {
        throw new Error('failed');
      }, function(error) {
        expect(error.constructor).toBe(RestException.prototype.constructor);
        done();
      }).done();

      var callSid = 'CAXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX';
      var url = `https://insights.twilio.com/v1/Voice/${callSid}/Summary`;

      holodeck.assertHasRequest(new Request({
        method: 'GET',
        url: url
      }));
    }
  );
  it('should generate valid fetch response',
    function(done) {
      var body = {
          'account_sid': 'ACaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa',
          'call_sid': 'CAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa',
          'call_type': 'carrier',
          'call_state': 'ringing',
          'processing_state': 'complete',
          'created_time': '2015-07-30T20:00:00Z',
          'start_time': '2015-07-30T20:00:00Z',
          'end_time': '2015-07-30T20:00:00Z',
          'duration': 100,
          'connect_duration': 99,
          'from': {},
          'to': {},
          'carrier_edge': {},
          'client_edge': {},
          'sdk_edge': {},
          'sip_edge': {},
          'tags': [
              'tags'
          ],
          'attributes': {},
          'properties': {},
          'trust': {},
          'annotation': {
              'account_sid': 'ACaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa',
              'call_sid': 'CAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa',
              'answered_by': 'human',
              'connectivity_issue': 'invalid_number',
              'quality_issues': [
                  'low_volume'
              ],
              'spam': true,
              'call_score': 2,
              'comment': 'this is a call',
              'incident': 'https://twilio.zendesk.com/support/tickets/17353089'
          },
          'url': 'https://insights.twilio.com/v1/Voice/CAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/Summary'
      };

      holodeck.mock(new Response(200, body));

      var promise = client.insights.v1.calls('CAXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX')
                                      .summary().fetch();
      promise.then(function(response) {
        expect(response).toBeDefined();
        done();
      }, function() {
        throw new Error('failed');
      }).done();
    }
  );
});
